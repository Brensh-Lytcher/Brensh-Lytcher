日付 : 2024/07/08~12
Plan
  1. 新しい特徴量の作成・検証
  2. 高得点コードを調べて、良い解法を調べる

Do
  1. 新しい特徴量の作成・検証
      (1) 訓練データの特定の特徴量組み合わせと同じものを持つ根源データの口座解除率(Exitedの平均値)
          (前回は訓練データと根源データの共通変数組み合わせを持つものの間の関連性を調べると考えたが、様々な方法を行った結果、根源データの口座解除率が一番わかりやすいため、これに決めた。)
          'CreditScore', 'Geography', 'Gender', 'Age', 'Tenure', 'Balance', 'NumOfProducts', 'HasCrCard', 'IsActiveMember', 'EstimatedSalary'の10個の特徴量の任意の1つ、任意の2つからなる組み合わせ、任意の3つからなる組み合わせ、および任意の4つからなる組み合わせのそれぞれと同じ特徴量あるいは組み合わせを持つ根源データの口座解除率を新たな特徴量とする。そして、根源データに含まれない特徴量の値あるいは組み合わせを持つ訓練データについて、その新しく生成された特徴量を根源データ全体の口座解除率で埋める。
          例えば、trainの特徴量'A'には0, 1, 2の3種類の値があり、originの特徴量'A'には0と1の2種類の値しかない場合、新しく生成される特徴量'a'において、'A'=0のtrainデータに対応するものは、'A'=0を満たすoriginデータの口座解除率であり、'A'=1のtrainデータに対応するものは、'A'=1を満たすoriginデータの口座解除率であるが、'A'=2のtrainデータに対応するものはoriginデータ全体の口座解除率である。
          これらの特徴量の作成において、最大の問題点が計算量である。最初は、trainデータ一つ一つに対して、それと同じ特徴量組み合わせを持つ根源データを見つけ出して、口座解除率をtrainの新しいデータ列に入れるようにしていたが、新しい特徴量を1つ作成するのに数分もかかった。特徴量1つだけで生成できる特徴量が10個、2つからなる組み合わせで生成できる特徴量が45個、3つからなる組み合わせで生成できる特徴量が120個、4つからなる組み合わせで生成できる特徴量が210個もあるので、すべての特徴量を生成するためには大変長い時間がかかってしまう。その次に、originのデータの特徴量組み合わせと対応するデータの口座解除率の対の辞書型オブジェクトを作成して、pd.DataFrame.map()を使って、trainデータの特徴量組み合わせに対応する値を入れるようにしたが、辞書型オブジェクトの作成に時間がとてもかかった。その後、pd.DataFrame.groupby()を使って高速に辞書型オブジェクトが作成できたが、作成した新しい特徴量をtrainに入れるときに、「PerformanceWarning: DataFrame is highly fragmented.」という警告メッセージが出た。最終的に、pd.concat()を使ってtrainと新しい特徴量を結合することで、この問題を解決できた。
          埋め込み法で、ランダムフォレストモデルによる特徴量重要度の評価を調べたら、新しく作成した特徴量のうち、コンペが提供した特徴量よりも重要度が高いものがたくさんあることが明らかになった。そして、重要度を高い順に並べると、重要度が0.01以上の特徴量数が約15個あり、0.005以上の特徴量数が約50個あり、0.0025以上の特徴量数が約125個ある。(全特徴量の重要度の和が1であり, 重要度の平均値が約0.0025である)。しかし、モデルのパラメータ最適化を行っていなくて、役に立たない特徴量も除いていなかったので、検証データのうち正しく予測できたものの割合が86.7%しかなかった。

      (2) 訓練データと根源データの共通口座番号を持つものの間の関連性を調べる
          (1)と同様のやり方で、根源データと同じ口座番号を持つ訓練データに根源データのExitedの値を、根源データにない口座番号を持つ訓練データに根源データ全体のExitedの平均値をまとめて、新しい特徴量original_exitedとした。
          埋め込み法で、ランダムフォレストモデルによる特徴量重要度の評価を調べたら、original_exitedの重要度が3番目に低かったので、あまり役に立たないものだと考えられる。

  2. 高得点コードを調べて、良い解法を調べる
      (1) "1st Place Solution"では、CustomerIdとSurnameをエンコードしたものが予測に有効であり、CatBoostは高スコアの取得に十分であると主張した [1]。私はCustomerIdに基づいて特徴量を作成したが、Surnameを使ったことがない。Surnameが同じものは同じ人が使った銀行口座であるため、口座を解除したかに類似性がある、という可能性が考えられるので、Surnameが役に立つかもしれない。
      (2) "2nd place solution"では、特徴量の組み合わせが根源データにあれば1、なければ0という特徴量を作成した [2]。これは私が作成した1つ目の特徴量に似ているがが、私は1と0の代わりに、特定の特徴量組み合わせを持つ根源データの口座解除率を全根源データの口座解除率を使った。もちろん、私の方の情報量が多いが、この前のアンサンブル学習で発見したように、確率変数を使う場合より、バイナリデータを使った方のスコアが高くなることもあるので、どの方法がもっと良いがはわからない。今後は時間があれば、これについて調べてみたい。
      (3) Jiya Sinhaさんのコードでは、2クラス分類ではなく、回帰分析を使った。そして、提出したファイルも回帰分析の結果、つまり1と0の離散値ではなく、0~1の連続値を使った。そのスコアが0.87くらいであった [3]。これに私は驚いた。このコンペはバイナリデータの予測であるなので、分類モデルを使うのは当然だと思った。さらに、Jiya Sinhaのコードで、特徴量分析を深くやっていなくて、モデルのパラメータ最適化やアンサンブル学習は何一つもやっていなかったのに、高得点を得たのは不思議だと思った。自分もこの方法を試すべきだと思った。

Check
  1. 数値データについて、訓練データと同じ特徴量の組み合わせを持つ根源データの口座解除率の特徴量を作成した。1特徴量、2特徴量の組み合わせ、3特徴量の組み合わせ、および4特徴量の組み合わせについて行った。合計385個の特徴量を作成した。
  2. 口座番号について、訓練データと同じものを持つ根源データのExited値からなる特徴量を作成した。
  3. 作成した特徴量の有効性について、埋め込み法で簡単に調べたが、適切な特徴量を抽出して、モデルのパラメータ最適化して予測することを行ったいなかった。
  4. 高得点コードについて、3つのコードと解法を調べた。

Action
  1. 予定作業をすべて行ったが、特徴量作成のアルゴリズムの作り方を考えるのに大量の時間をかかったため、作成した特徴量の重要度（有効性）の検証を十分行っていなかった。
  2. この後は作成した特徴量から最も有効な一部を取り出して、それらを使ったモデルを作成する。
  3. 期末発表までの時間が少なくて、高得点コード・解法から見つけだ方法をすべて実践するのは不可能なので、CatBoostClassifierとCatBoostRegressionだけを使って作業を進めるつもりだ。

参考文献
  [1] Nikolay Slobodchuk: "1st Place Solution", kaggle. https://www.kaggle.com/competitions/playground-series-s4e1/discussion/472502. Accessed 2024/07/12
  [2] lukaszl: "2nd place solution", kaggle. https://www.kaggle.com/competitions/playground-series-s4e1/discussion/472496. Accessed 2024/07/12
  [3] Jiya Sinha: "Binary Classification with a Bank Churn Dataset", https://www.kaggle.com/competitions/playground-series-s4e1/discussion?sort=hotness. Accessed 2024/07/12
