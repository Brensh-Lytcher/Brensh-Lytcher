日付 : 2024/06/10
Plan
  1. 「Binary Classification with a Bank Churn Dataset」の開始
  2. 前処理
  3. 特徴量作成
  4. 各種モデルによる予測

Do
  1. 「Binary Classification with a Bank Churn Dataset」の開始
      今までは機械学習手法の学習を中心として作業を進めてきたが、これからは実践を中心として作業するため、新しいコンペを使う。
      Binary Classification with a Bank Churn Datasetは2クラス分類のコンペである。
      LeaderboardのPublicはテストデータの20%、Privateはテストデータの80%で評価する。
  2. 前処理
      データセットは「Bank Customer Churn Prediction」のデータセットを使って訓練した深層学習モデルが生成したものである。
      2.1. データの数
          Binary Classification with a Bank Churn Datasetの訓練データとテストデータをそれぞれtrainとtest, Bank Customer Churn Predictionのデータをoriginalをする。
          train      :   165034
          test       :   110023
          original   :   10000
          データ数が「Multi-Class_Prediction_of_Obesity_Risk」のデータ数(20758個)よりはるかに多くなっているため、データ分割による訓練データ不足の問題が起きないだろう。
      2.2. 変数の概要
          すべてのデータに欠損がないことを確かめた。
          -CustomerId:      顧客ID
          -Surname:         名前
          -CreditScore:     信用 (350 ~ 850)
          -Geography:       居住国 ('France', 'Germany', 'Spain')
          -Gender:          性別 ('Female', 'Male')
          -Age:             年齢 (18 ~ 92)
          -Tenure:          銀行に在籍する年数 (0 ~ 10)
          -Balance:         口座残高 (0 ~ 250898.09)
          -NumOfProducts:   使用する銀行商品数 (1, 2, 3, 4)
          -HasCrCard:       クレジットカードの所有(1 = yes, 0 = no)
          -IsActiveMember:  口座をよく使うか (1 = yes, 0 = no)
          -EstimatedSalary: 推定給与 (11.58 ~ 199992.48)
          -Exited:          口座解除したか (1 = yes, 0 = no)
          Exitedが目的変数で、他が説明変数。CustomerIdとSurnameはただの番号と名前なので、その値と目的変数との間の相関が存在しないと考えた。
          それぞれの説明変数について、testデータの分布がtrainデータの分布にほぼ一致することを確かめた。
          Balance(口座残高)について、データの約半数のBalanceが0、残りの半分が12万の前後で分布している。よって、Balanceが0になっているかどうかという特徴量が作れると考えた。
          口座解除した顧客のCustomerIdは他の顧客も使用できるので、同じCustomerIdを持つ顧客がいるかもしれない。CustomerIdが現れる回数が予測に役立つかもしれないので、この後にこれを確かめる。
      2.3. データの型変更
          GeographyとGenderの文字列データを整数型データに変えた。
      2.4. データ分布の可視化
          pairplotを使って、CreditScore, Age, Balance, EstimatedSalaryのデータ分布の等高線図を作った。これらの特徴量が連続型データであるため、その分布図から分布の特徴が見える。しかし、他の特徴量が離散型のデータであるため、点が同じ場所に重なって、分布の特徴がわからないので、その分布を調べなかった。また、データ分布のグラフより、連続型説明変数のうち、Ageの分布のみがExitedと強く関連していることがわかる。
      2.5. 特徴量の重要度
          フィルタ法、ラッパー法と埋め込み法の3つをすべて使って特徴量の重要度を調べ、以下の結果が得られた。
          -AgeとNumOfProductsはExitedとの間に直接な相関があり、予測に極めて重要であることがわかる。
          -CreditScore, Geography, Age, Tenure, Balance, NumOfProducts, IsActiveMember, EstimatedSalaryが重要な特徴量であり、Gender, HasCrCardがほとんど予測に役立たない。ただし、GeographyとIsActiveMemberの重要度が0.04~0.05で、比較的低いので、無効な特徴量だと言ってもよいかもしれない。
  3. 特徴量作成
      3.1. 各国の口座解除率
          各国の口座解除率が異なっているので、国に関する特徴量が予測に役立つだろうと考えた。しかし、国のデータが名義尺度であり、その重要度が比較的低いので、国ごとの口座解除率を特徴量とした方がよいだろう。この特徴量の名前を"Geographical_Exit_Rate"とした。
      3.2. CustomerId
          trainとtestのデータセットにおいて、同じCustomerIdが1回しか現れないものもあれば、10回以上現れるものもある。(ただし、「Bank Customer Churn Prediction」のデータセットでは、1つの番号が1回しか現れない。)また、CustomerIdが同じのデータのうち、口座解除した者が1つしかないものもあれば、たくさんあるものもある。そして、人間は特定の数字の組み合わせが好きで、そのような数字からなる口座番号をなるべく手に入れたい、という文化がある(例えば、地域によって、8888が大吉、4444が不吉だと思われることがある)。そのため、trainとtestそれぞれのデータセットにおいて各CustomerIdが現れる回数の特徴量'CustomerId_used_times', trainとtest全体でCustomerIdが現れる回数の特徴量'total_CustomerId_used_times', trainの中で各CustomerIdの口座解除率の特徴量'exit_rate_on_CustomerId'を作った。ただし、口座解除率について、確率論によると、現れる回数が少ないCustomerIdほど、口座解除率の正確率が低いくなるので、その口座解除率を全データの口座解除率と組み合わせた。
      3.3. 口座残高があるか
          2.2.で話したように、Balance=0とBalance>0を表す特徴量'Have_Balance'を作った。
      3.4. 特徴量検証
          ラッパー法と埋め込み法を使って、作成した特徴量の重要度を調べた。検証の結果、CustomerId_used_times, total_CustomerId_used_times, exit_rate_on_CustomerIdの3つの特徴量の重要度が高く、Geographical_Exit_RateとHave_Balanceの重要度がかなり低いことがわかった。特に、exit_rate_on_CustomerIdが予測のスコアを大きく引き上げた。また、CustomerId_used_timesとtotal_CustomerId_used_timesが近似していて、後者の重要度が前者より大きいため、前者をあきらめるべきだ。したがって、total_CustomerId_used_timesとexit_rate_on_CustomerIdが有効な作成特徴量であり、この後の予測でも使い続けるつもりだ。また、埋め込み法の結果によると、新しい特徴量も使う場合に、IsActiveMemberの重要度がはとんど変化していなかったのに対して、Geographyの重要度が0.025以下に下がったので、Geographyが無効な特徴量と判断した。
  4. 各種モデルによる予測
      RandomForestClassifier, KNeighborsClassifier, SVC, MLPClassifierおよびLogisticRegressionを使って予測した。
      -RandomForestClassifierのスコアが0.877前後に達した。
      -KNeighborsClassifierのスコアが0.790前後に達した。
      -MLPClassifierのニューロン配置を[300, 300, 300]としたときのスコアが0.789前後になった。
      -LogisticRegressionのスコアが0.788前後に達した。
      SVCは大規模データを扱うときの計算量が極めて大きくなるため、計算時間もかなっり長くなってしまうので、使わないことにした。
      以上より、ランダムフォレストのスコアが最も高いことがわかるので、今後は主にこれを使う。また、ニューラルネットワークモデルのパラメーターを調整したらスコアがどうなるかをまだ調べていないので、今後はそのパラメーター最適化もを行うべきだ。

Check
  1. 前処理について、データの概要を調べて、型を変更し、データ分布を可視化して、特徴量の重要度を調べた。
  2. 特徴量を4つ作成して、その役割を検証した結果、そのうちの2つが有効なものであることが明らかになった。
  3. ランダムフォレスト、K-近傍法、ニューラルネットワークとロジスティック回帰のモデルを使って予測を行った。

Action
  1. 新しく作り出した有効な特徴量が2つしかないので、もっと多くの特徴量を作成するつもりだ。
  2. Binary Classification with a Bank Churn Datasetのデータセットは深層学習モデルが作り出したものであるので、元データを使ってモデルを作成したり、元データと作成データの同異を調べたりすべきだ。
  3. ニューラルネットワークモデルのパラメータの最適化を行う。
  4. ランダムフォレストモデルの未使用のパラメータを調整して最適化させる。

参考文献
  1. Kaggle: Binary Classification with a Bank Churn Dataset, https://www.kaggle.com/competitions/playground-series-s4e1
  2. Kaggle: Bank Customer Churn Prediction, https://www.kaggle.com/datasets/shubhammeshram579/bank-customer-churn-prediction

